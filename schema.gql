# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Affinity {
  id: Float!
  name: String!
  createdAt: String!
  updatedAt: Float!
  application: [Application!]!
}

input AffinityInput {
  name: String!
}

type Application {
  id: Float!
  name: String!
  lastName: String!
  yearsExperience: Float!
  phone: String!
  email: String!
  englishLevel: Float!
  url: String!
  createdAt: String!
  updatedAt: Float!
  applicationSkill: [ApplicationSkill!]
  affinity: Affinity
  modality: Modality
  language: Languages
  speciality: Speciality
}

input ApplicationInput {
  name: String
  lastName: String
  phone: String
  email: String
  yearsExperience: Float
  englishLevel: Float
  url: String
  affinityId: Int!
  modalityId: Int!
  languageId: Int!
  specialityId: Int!
}

type ApplicationSkill {
  id: Float!
  isMain: Boolean
  createdAt: String!
  updatedAt: Float!
  application: Application
  skill: Skill
}

input ApplicationSkillInput {
  id: Float!
  isMain: Boolean = false
}

type DescribeYourself {
  id: Float!
  name: String!
  createdAt: String!
  updatedAt: Float!
  applicationSkill: [ApplicationSkill!]!
}

type Language {
  id: Float!
  name: String!
  createdAt: String!
  updatedAt: Float!
}

type Languages {
  id: Float!
  name: String!
  createdAt: String!
  updatedAt: Float!
  application: [Application!]!
}

input LanguagesInput {
  name: String!
}

type Modality {
  id: Float!
  name: String!
  createdAt: String!
  updatedAt: Float!
  application: [Application!]!
}

input ModalityInput {
  name: String!
}

type Mutation {
  createUser(input: UserInput!): User!
  createApplicationWithSkills(skills: [ApplicationSkillInput!]!, application: ApplicationInput!): Application!
  createApplication(input: ApplicationInput!): Application!
  createSkill(input: SkillInput!): Skill!
  createSkillType(input: SkillTypeInput!): SkillType!
  createLanguage(input: LanguagesInput!): Languages!
  createModality(input: ModalityInput!): Modality!
  createSpeciality(input: SpecialityInput!): Speciality!
  createAffinity(input: AffinityInput!): Affinity!
}

type Query {
  users(id: Int): [User!]!
  user(id: Int!): User
  applications(id: Int): [Application!]!
  application(id: Int!): Application
  skills(id: Int): [Skill!]!
  skill(id: Int!): Skill
  skillTypes(id: Int): [SkillType!]!
  skillType(id: Int!): SkillType
  languages(id: Int): [Languages!]!
  language(id: Int!): Languages
  modalitys(id: Int): [Modality!]!
  modality(id: Int!): Modality
  specialitys(id: Int): [Speciality!]!
  speciality(id: Int!): Speciality
  affinitys(id: Int): [Affinity!]!
  affinity(id: Int!): Affinity
}

type Skill {
  id: Float!
  name: String!
  description: String!
  createdAt: String!
  updatedAt: Float!
  applicationSkill: [ApplicationSkill!]!
  skillType: SkillType
}

input SkillInput {
  name: String!
  description: String!
}

type SkillType {
  id: Float!
  name: String!
  createdAt: String!
  updatedAt: Float!
  skill: [Skill!]!
}

input SkillTypeInput {
  name: String!
}

type Speciality {
  id: Float!
  name: String!
  createdAt: String!
  updatedAt: Float!
  application: [Application!]!
}

input SpecialityInput {
  name: String!
}

type User {
  id: Float!
  username: String!
  password: String!
  createdAt: String!
  updatedAt: Float!
}

input UserInput {
  username: String!
  password: String!
}
